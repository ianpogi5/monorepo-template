name: Validate Push

on:
  pull_request:
  push:
    paths-ignore:
      - "**/**.md"
      - "docs/**"
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-build-app-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-app-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-build-app-${{ env.cache-name }}-
            ${{ runner.os }}-build-app-
            ${{ runner.os }}-

      - name: Cache build
        uses: actions/cache@v2
        env:
          cache-name: cache-build
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            **/build
          key: ${{ runner.os }}-build-app-${{ env.cache-name }}-${{ github.sha }}

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install dependencies
        run: yarn

      - name: Build Web
        working-directory: packages/frontend
        run: yarn build

  validate:
    name: Validate
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-build-app-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-app-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-build-app-${{ env.cache-name }}-
            ${{ runner.os }}-build-app-
            ${{ runner.os }}-

      - name: Cache build
        uses: actions/cache@v2
        env:
          cache-name: cache-build
        with:
          path: |
            **/build
          key: ${{ runner.os }}-build-app-${{ env.cache-name }}-${{ github.sha }}

      - name: Run API
        run: yarn start:api &

      - name: Wait for API
        run: until nc -z localhost 3001; do sleep 1; done && echo "API started"

      - name: End to End tests
        uses: cypress-io/github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          working-directory: packages/frontend
          start: yarn serve
          wait-on: "http://localhost:3000, http://localhost:3001/hello"

  lighthouse:
    name: Lighthouse
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-build-app-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-app-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-build-app-${{ env.cache-name }}-
            ${{ runner.os }}-build-app-
            ${{ runner.os }}-

      - name: Cache build
        uses: actions/cache@v2
        env:
          cache-name: cache-build
        with:
          path: |
            **/build
          key: ${{ runner.os }}-build-app-${{ env.cache-name }}-${{ github.sha }}

      - name: Run Lighthouse against a static build dir
        uses: treosh/lighthouse-ci-action@v3
        with:
          configPath: "./packages/frontend/lighthouserc.json"
          runs: 1
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage
